<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Posroid.DietGroupedPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Posroid"
    xmlns:common="using:Posroid.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="TotalFoodsInfo"/>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Posmetro Diet</x:String>
        <Style x:Key="CaloriesTextStyle" TargetType="TextBlock" >
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="18" />
        </Style>
        
        <local:MealBlockDataTemplateSelector x:Key="mealBlockDataTemplateSelector" />
        <DataTemplate x:Key="mealBlockShortTemplate">
            <Grid Background="{Binding Mealtime, Converter={StaticResource mealtimeBrushConverter}}" Width="130" Height="130">
                <TextBlock Text="{Binding FoodInformations.Type}" FontSize="80" FontWeight="Light" Margin="69,-10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <TextBlock Text="{Binding FoodInformations.Kilocalories, Converter={StaticResource intCaloriesConverter}}" FontSize="13" VerticalAlignment="Bottom" Margin="10,0,0,30" HorizontalAlignment="Left" />
                <TextBlock Text="{Binding Mealtime, Converter={StaticResource mealtimeStringConverter}}" FontSize="13" VerticalAlignment="Bottom" Margin="10" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="mealBlockTallTemplate">
            <Grid Background="{Binding Mealtime, Converter={StaticResource mealtimeBrushConverter}}" Width="130" Height="270">
                <TextBlock Text="{Binding FoodInformations.Type}" FontSize="80" FontWeight="Light" Margin="69,-10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                <TextBlock Text="{Binding FoodInformations.Kilocalories, Converter={StaticResource intCaloriesConverter}}" FontSize="26" VerticalAlignment="Bottom" Margin="10,0,0,30" HorizontalAlignment="Left" />
                <TextBlock Text="{Binding Mealtime, Converter={StaticResource mealtimeStringConverter}}" FontSize="13" VerticalAlignment="Bottom" Margin="10" HorizontalAlignment="Left" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Page.BottomAppBar>
        <AppBar x:Name="bottomAppBar" Background="#FF00005D" BorderBrush="{StaticResource AppBarBorderThemeBrush}" IsSticky="True">
            <Grid>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Click="ClearButtonClicked" >
                        <Button.Style>
                            <Style BasedOn="{StaticResource AppBarButtonStyle}" TargetType="Button">
                                <Setter Property="AutomationProperties.AutomationId" Value="NoAppBarButton"/>
                                <Setter Property="AutomationProperties.Name" Value="Clear"/>
                                <Setter Property="Content" Value="&#xE10A;"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Click="RefreshButtonClicked" Style="{StaticResource RefreshAppBarButtonStyle}" />
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition x:Name="SidePopupColumn" Width="0" />
        </Grid.ColumnDefinitions>
        <Grid Style="{StaticResource LayoutRootStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="140"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Back button and page title -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
                <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" Style="{StaticResource PageHeaderTextStyle}"/>
            </Grid>

            <!-- Horizontal scrolling grid used in most view states -->
            <SemanticZoom Grid.Row="1">
                <SemanticZoom.ZoomedInView>
                    <local:CustomGridView
                        x:Name="itemGridView"
                        AutomationProperties.AutomationId="ItemGridView"
                        AutomationProperties.Name="Grouped Items"
                        Margin="0,-3,0,0"
                        Padding="116,0,40,46"
                        ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
                        SelectionMode="Multiple" SelectionChanged="itemGridView_SelectionChanged_1"
                        ItemTemplateSelector="{StaticResource mealBlockDataTemplateSelector}"
                        IsSwipeEnabled="True" ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                        IsItemClickEnabled="True" ItemClick="ItemClicked">

                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="1,0,0,6">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Button Style="{StaticResource TextButtonStyle}" Content="{Binding ServedDate, Converter={StaticResource dateConverter}, ConverterParameter=MM/DD-dayofweek}" Click="NavigateClicked"/>
                                            <Rectangle Grid.Column="1" Margin="10" Width="120" Fill="{Binding ServedDate, Converter={StaticResource dayBrushConverter}}" HorizontalAlignment="Left"  />
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0" ItemHeight="140" ItemWidth="140"/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </GridView.GroupStyle>
                        <!--<GridView.ItemTemplate>
                            <DataTemplate>
                                <Grid>

                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>-->
                    </local:CustomGridView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <GridView
                        x:Name="itemGridViewZoomedOut"
                        ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                        Margin="0,-3,0,0"
                        Padding="116,0,116,40">
                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VariableSizedWrapGrid ItemWidth="200" ItemHeight="300" MaximumRowsOrColumns="1" VerticalChildrenAlignment="Center"  />
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="1,0,0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{StaticResource TextButtonStyle}" Content="{Binding Group.ServedDate, Converter={StaticResource dateConverter}, ConverterParameter=MM/DD-dayofweek}"/>
                                    <Rectangle Grid.Column="1" Margin="10" Width="120" Fill="{Binding Group.ServedDate, Converter={StaticResource dayBrushConverter}}" HorizontalAlignment="Left"  />
                                </Grid>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>

            <!-- Vertical scrolling list only used when snapped -->
            <ListView
                x:Name="itemListView"
                AutomationProperties.AutomationId="ItemListView"
                AutomationProperties.Name="Grouped Items"
                Grid.Row="1"
                Visibility="Collapsed"
                Margin="0,-10,0,0"
                Padding="10,0,0,60"
                ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
                ItemTemplate="{StaticResource Standard80ItemTemplate}">

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Grid Margin="7,7,0,0">
                                    <Button
                                    AutomationProperties.Name="Group Title"
                                    Content="{Binding Title}"
                                    Style="{StaticResource TextButtonStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </Grid>
        
        <ListView x:Name="textList"  Grid.Column="1" Margin="10,30,40,30" SelectionMode="None" >
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding ServedDate, Converter={StaticResource dateConverter}, ConverterParameter=MM/DD/dayofweek}" Margin="5,10,0,0">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaselineTextStyle}" TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="30"/>
                                    <Setter Property="FontWeight" Value="Light"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Grid.Row="1" Text="{Binding Mealtime, Converter={StaticResource mealtimeStringConverter}}" Margin="5,10,0,0">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource BaselineTextStyle}" TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="25"/>
                                    <Setter Property="FontWeight" Value="Light"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <Grid Grid.Row="2" DataContext="{Binding FoodInformations}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Type}" FontSize="70" Foreground="#FFEEEEEE" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Margin="13,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                    <TextBlock Text="{Binding Kilocalories}" Style="{StaticResource CaloriesTextStyle}" />
                                    <TextBlock Text="kcal" Style="{StaticResource CaloriesTextStyle}" />
                                </StackPanel>
                                <ItemsControl ItemsSource="{Binding Foods}" Grid.Row="1"  Margin="13,0,0,20" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="- " FontSize="18" />
                                                <TextBlock Grid.Column="1" Text="{Binding langstr, Converter={StaticResource languageConverter}, ConverterParameter={StaticResource preferedLanguage}}" FontSize="18" TextWrapping="Wrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,0,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
